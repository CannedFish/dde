// Generated by CoffeeScript 1.3.3
var DesktopEntry, Folder, IconGroup, Item, Widget, db_conn, render_item,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

db_conn = openDatabase("test", "0.1", "test widget info database", 10 * 1024);

db_conn.transaction(function(tx) {
  return tx.executeSql("CREATE TABLE WidgetInfo (id REAL UNIQUE, x Int, y Int)");
});

Widget = (function() {

  function Widget() {}

  Widget.prototype._$ = function() {
    return $("#" + this.id);
  };

  Widget.prototype.get_x = function() {
    return this._$().position().left;
  };

  Widget.prototype.get_y = function() {
    return this._$().position().top;
  };

  Widget.prototype.get_width = function() {
    return this._$().outerWidth();
  };

  Widget.prototype.get_height = function() {
    return this._$().outerHeight();
  };

  Widget.prototype.get_position = function() {
    var pos;
    pos = this._$().position();
    return [pos.top, pos.left];
  };

  Widget.prototype.set_position = function(x, y) {
    if (x === -1) {
      x = this.get_x();
    }
    if (y === -1) {
      y = this.get_y();
    }
    return this._$().position({
      of: this._$().parent(),
      my: "left top",
      at: "left top",
      offset: "" + x + " " + y
    });
  };

  Widget.prototype.set_id = function(id) {
    return this.id = id;
  };

  Widget.prototype.save_info = function() {
    var _this = this;
    return db_conn.transaction(function(tx) {
      return tx.executeSql("replace into WidgetInfo (id, x, y) values (?, ?, ?)", [_this.id, _this.get_x(), _this.get_y()], function(result) {}, function(tx, error) {
        return console.log(error);
      });
    });
  };

  Widget.prototype.load_info = function() {
    var _this = this;
    return db_conn.transaction(function(tx) {
      return tx.executeSql("select id, x, y from WidgetInfo where id = ?", [_this.id], function(tx, r) {
        var p;
        p = r.rows.item(0);
        return _this.set_position(p.x, p.y);
      }, function(tx, error) {
        return console.log("error");
      });
    });
  };

  return Widget;

})();

Item = (function(_super) {

  __extends(Item, _super);

  function Item(name, icon, exec) {
    this.name = name;
    this.icon = icon;
    this.exec = exec;
    this.itemTemp = "icontemp";
    this.itemContainer = "itemContainer";
    this.id = DCore.gen_id(this.name + this.icon + this.exec);
  }

  Item.prototype.render = function() {
    var _this = this;
    $("#" + this.itemContainer).append($("#" + this.itemTemp).render({
      "class": "item",
      "id": this.id,
      "name": this.name,
      "icon": this.icon,
      "exec": this.exec
    }));
    this._$().draggable({
      stop: function(event, ui) {
        return _this.save_info();
      }
    }).dblclick(function() {
      return DCore.run_command($(this)[0].getAttribute('exec'));
    });
    return this.load_info();
  };

  return Item;

})(Widget);

DesktopEntry = (function(_super) {

  __extends(DesktopEntry, _super);

  function DesktopEntry() {
    return DesktopEntry.__super__.constructor.apply(this, arguments);
  }

  return DesktopEntry;

})(Item);

Folder = (function(_super) {

  __extends(Folder, _super);

  function Folder() {
    return Folder.__super__.constructor.apply(this, arguments);
  }

  return Folder;

})(Item);

IconGroup = (function(_super) {

  __extends(IconGroup, _super);

  function IconGroup() {
    return IconGroup.__super__.constructor.apply(this, arguments);
  }

  return IconGroup;

})(Item);

render_item = function(item) {
  var i;
  i = new Item(item.name, item.icon, item.exec);
  return i.render();
};

$(function() {
  var item, _i, _len, _ref, _results;
  _ref = DCore.get_desktop_items();
  _results = [];
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    item = _ref[_i];
    _results.push(render_item(item));
  }
  return _results;
});
